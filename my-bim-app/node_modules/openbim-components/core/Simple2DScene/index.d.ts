import * as THREE from "three";
import { OrbitControls } from "three/examples/jsm/controls/OrbitControls";
import { Component, Updateable, UI, Disposable, Event, UIElement, Resizeable } from "../../base-types";
import { Button, Canvas, FloatingWindow } from "../../ui";
import { Components } from "../Components";
/**
 * A simple floating 2D scene that you can use to easily draw 2D graphics
 * with all the power of Three.js.
 */
export declare class Simple2DScene extends Component<THREE.Scene> implements UI, Updateable, Disposable, Resizeable {
    static readonly uuid: "b48b7194-0f9a-43a4-a718-270b1522595f";
    /** {@link Updateable.onAfterUpdate} */
    readonly onAfterUpdate: Event<unknown>;
    /** {@link Updateable.onBeforeUpdate} */
    readonly onBeforeUpdate: Event<unknown>;
    /** {@link Resizeable.onResize} */
    onResize: Event<THREE.Vector2>;
    /** {@link Component.enabled} */
    enabled: boolean;
    /** {@link UI.uiElement} */
    uiElement: UIElement<{
        main: Button;
        mainWindow: FloatingWindow;
        canvas: Canvas;
    }>;
    /** The camera controls that move around in the scene. */
    controls: OrbitControls;
    private readonly _scene;
    private readonly _camera;
    private readonly _renderer;
    private readonly _size;
    private readonly _frustumSize;
    constructor(components: Components);
    /**
     * {@link Component.get}
     * @returns the 2D scene.
     */
    get(): THREE.Scene;
    /** {@link Disposable.dispose} */
    dispose(): Promise<void>;
    /** {@link Updateable.update} */
    update(): Promise<void>;
    /** {@link Resizeable.getSize} */
    getSize(): THREE.Vector2;
    /** {@link Resizeable.resize} */
    resize: () => void;
}
